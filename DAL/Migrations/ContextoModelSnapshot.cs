// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseSerialColumns(modelBuilder);

            modelBuilder.Entity("AsignaturaEstudiante", b =>
                {
                    b.Property<long>("asignatura_id_fk")
                        .HasColumnType("bigint");

                    b.Property<int>("estudiante_id_fk")
                        .HasColumnType("integer");

                    b.HasKey("asignatura_id_fk", "estudiante_id_fk");

                    b.HasIndex("estudiante_id_fk");

                    b.ToTable("AsignaturaEstudiante", "universidad");
                });

            modelBuilder.Entity("DAL.Entidades.Asignatura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<long>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("modulo");

                    b.Property<string>("TecnologiasUsadas")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Asignaturas_DAW", "universidad");
                });

            modelBuilder.Entity("DAL.Entidades.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseSerialColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .HasColumnType("text")
                        .HasColumnName("apellidos_alumno");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("documento_identidad");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fch_nacimiento");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nombre_alumno");

                    b.HasKey("Id");

                    b.ToTable("alumnos_DAW", "universidad");
                });

            modelBuilder.Entity("AsignaturaEstudiante", b =>
                {
                    b.HasOne("DAL.Entidades.Asignatura", null)
                        .WithMany()
                        .HasForeignKey("asignatura_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entidades.Estudiante", null)
                        .WithMany()
                        .HasForeignKey("estudiante_id_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
